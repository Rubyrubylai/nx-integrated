version: 2.1

parameters:
  run-service-workflow:
    type: boolean
    default: true
  run-client-workflow:
    type: boolean
    default: false
  run-all-workflow:
    type: boolean
    default: false
  pull_request:
    type: boolean
    default: false

orbs:
  nx: nrwl/nx@1.6.1
  gcp-gcr: circleci/gcp-gcr@0.13.0
  ghpr: narrativescience/ghpr@1.1.6

commands:
  set-version-env:
    description: Set SHA1_TAG, SERVER_VERSION
    steps:
      - run:
          name: set env var
          command: |
            BASE_BRANCH=develop

            case $CIRCLE_BRANCH in
              develop)
                ENVIRONMENT="develop"
                if git log -1 --pretty=%s%n%b | grep 'Merge pull request'; then
                  BASE_BRANCH=develop
                else
                  BASE_BRANCH=test
                fi
                ;;
              test)
                ENVIRONMENT="test"
                if git log -1 --pretty=%s%n%b | grep 'Merge pull request'; then
                  BASE_BRANCH=test
                else
                  BASE_BRANCH=master
                fi
                ;;
              master)
                ENVIRONMENT="production"
                if git log -1 --pretty=%s%n%b | grep 'Merge pull request'; then
                  BASE_BRANCH=master
                fi
                ;;
            esac
            echo 'export SHA1_TAG=${CIRCLE_SHA1:0:7}' >> "$BASH_ENV"
            echo 'export SERVER_VERSION="$(date +%s)-${SHA1_TAG}"' >> "$BASH_ENV"
            echo "export ENVIRONMENT=$ENVIRONMENT" >> "$BASH_ENV"
            echo "export BASE_BRANCH=$BASE_BRANCH" >> "$BASH_ENV"

            echo "CIRCLE_BRANCH: $CIRCLE_BRANCH"
            echo "BASE_BRANCH: $BASE_BRANCH"
            echo "CIRCLE_PULL_REQUEST: $CIRCLE_PULL_REQUEST"
            source "$BASH_ENV"
jobs:

  lint:
    docker:
      - image: cimg/node:lts-browsers
    steps:
      - checkout
      - set-version-env
      - run: npm ci
      - nx/set-shas:
          main-branch-name: $BASE_BRANCH
      - run: npx nx format:write
      - run: npx nx affected --base=$NX_BASE -t lint --parallel=3

  test:
    docker:
      - image: cimg/node:lts-browsers
    environment:
      - BASE: << pipeline.git.branch >>
    steps:
      - checkout
      # - set-version-env
      - run: npm ci
      # - run:
      #     command: |
      #       echo 'export MAIN_BRANCH_NAME=develop' >> "$BASH_ENV"
      #       source "$BASH_ENV"
      - nx/set-shas:
          main-branch-name: $BASE
      - run:
          command: |
            echo "CIRCLE_BRANCH: $CIRCLE_BRANCH"
            echo "BASE: $BASE"
            echo "NX_BASE: $NX_BASE"
            echo "CIRCLE_PULL_REQUEST: $CIRCLE_PULL_REQUEST"
            if [ "$CIRCLE_BRANCH" == "$BASE" ]; then
              echo "CIRCLE_BRANCH and BASE are equal"
            fi
      - run: npx nx affected:test --base=$NX_BASE --parallel=3

  build-and-push-image:
    executor: gcp-gcr/default
    parameters:
      image:
        type: string
      registry-url:
        type: string
      tag:
        type: string
      dockerfile:
        type: string
    steps:
      - checkout
      - set-version-env
      - run: npm ci
      - nx/set-shas
      - run: npx nx build server --parallel=3
      - gcp-gcr/gcr-auth:
          gcloud-service-key: GOOGLE_SERVICE_ACCOUNT_KEY
      - gcp-gcr/build-image:
          dockerfile: << parameters.dockerfile >>
          extra_build_args: --build-arg SERVER_VERSION=$SERVER_VERSION
          image: << parameters.image >>
          registry-url: << parameters.registry-url >>
          tag: ${SHA1_TAG}
      - gcp-gcr/push-image:
          image: << parameters.image >>
          registry-url: << parameters.registry-url >>
          tag: ${SHA1_TAG}
      - gcp-gcr/tag-image:
          image: << parameters.image >>
          registry-url: << parameters.registry-url >>
          source-tag: ${SHA1_TAG}
          target-tag: << parameters.tag >>

workflows:
  # push-client:
  #   when:
  #     or:
  #       - << pipeline.parameters.run-client-workflow >>
  #       - << pipeline.parameters.run-all-workflow >>
  #   jobs:
  #     - lint
  push-server:
    when:
      or:
        - << pipeline.parameters.run-service-workflow >>
        - << pipeline.parameters.run-all-workflow >>
    jobs:
      - lint
      - test
      # - build-and-push-image:
      #     context:
      #       - gcr
      #     requires:
      #       - lint
      #       - test
      #     image: nx-integrated
      #     registry-url: asia.gcr.io
      #     tag: ${CIRCLE_BRANCH}
      #     dockerfile: apps/server/Dockerfile
